name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Cache Poetry virtualenv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install python package
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-root
    - name: Lint
      run: |
        poetry run isort --check .
        poetry run black --check --fast .
        poetry run flake8 .
        poetry run pyright
    - name: Run Tests
      run: |
        poetry run pytest
